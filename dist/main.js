(() => {
  // src/ui/config.tsx
  function Config() {
    return /* @__PURE__ */ h("div", null, /* @__PURE__ */ h("h1", null, "KINDYEAR Music Info"), /* @__PURE__ */ h("p", null, "\u672C\u63D2\u4EF6\u53EF\u4EE5\u8F93\u51FA\u6B4C\u66F2\u7684\u540D\u79F0\u3001\u6B4C\u624B\u540D\u79F0\u81F3\u672C\u5730txt\u6587\u4EF6\uFF0C\u5C01\u9762\u4FDD\u5B58\u4E3A\u672C\u5730\u56FE\u7247"), /* @__PURE__ */ h("p", null, "\u53EF\u5728OBS\u7B49\u76F4\u64AD\u8F6F\u4EF6\u4E2D\u8BFB\u53D6\u672C\u5730\u6587\u672C\u6216\u56FE\u7247\u5B9E\u73B0\u663E\u793A"), /* @__PURE__ */ h("p", null, "\u7531\u4E8E\u672C\u63D2\u4EF6\u4F7F\u7528\u4E86exec\u529F\u80FD\u8C03\u7528Windows\u672C\u5730\u7684Wget\u7A0B\u5E8F\u4E0B\u8F7D\u56FE\u7247\uFF0C\u9996\u6B21\u4F7F\u7528\u53EF\u80FD\u4F1A\u5F39\u51FA\u8FD0\u884CWget\u7684\u63D0\u793A\uFF0C\u8BF7\u653E\u5FC3\u4F7F\u7528"), /* @__PURE__ */ h("p", null, "\u8F93\u51FA\u7684\u4FE1\u606F\u76EE\u5F55\u4E3A\u63D2\u4EF6\u76EE\u5F55\u7684plugins_runtime/KINDYEAR-MusicInfo/output"));
  }

  // src/main.ts
  plugin.onConfig(() => {
    const element = document.createElement("div");
    ReactDOM.render(Config(), element);
    return element;
  });
  var musicInfoTitle = null;
  var musicInfoArtist = null;
  var musicInfoCoverUrl = null;
  var oldMusicInfoTitle = null;
  var oldMusicInfoArtist = null;
  var oldMusicInfoCoverUrl = null;
  var dev = betterncm_native.fs.exists("plugins_dev/KINDYEAR-MusicInfo/");
  plugin.onLoad(async () => {
    console.log("[KMI] KMI Loaded,Dev mode:", dev);
    legacyNativeCmder.appendRegisterCall("Load", "audioplayer", () => {
      const observer = new MutationObserver(async () => {
        const titleElement2 = document.querySelector("a.title");
        const artistElement = document.querySelector("a.artist");
        const coverElement = document.querySelector("img.front.normal.j-cover");
        if (titleElement2) {
          musicInfoTitle = titleElement2.getAttribute("title");
        }
        if (artistElement) {
          musicInfoArtist = artistElement.textContent;
        }
        if (coverElement) {
          musicInfoCoverUrl = coverElement.getAttribute("src");
        }
        await saveMusicInfo(musicInfoTitle, musicInfoArtist, musicInfoCoverUrl);
      });
      const titleElement = document.querySelector("a.title.f-oh.j-title");
      if (titleElement) {
        observer.observe(document.body, { childList: true, subtree: true });
      } else {
        console.error("Title element not found!");
      }
    });
    window.addEventListener("DOMContentLoaded", () => {
    });
  });
  function checkMusicInfo(title, artist, coverUrl) {
    return title !== oldMusicInfoTitle || artist !== oldMusicInfoArtist || coverUrl !== oldMusicInfoCoverUrl;
  }
  async function saveMusicInfo(title, artist, coverUrl) {
    const imageUrl = coverUrl?.match(/https:\/\/[^/]+\/[^?]+/)?.[0];
    if (checkMusicInfo(title, artist, imageUrl)) {
      let dataPath = await betterncm.app.getDataPath();
      if (dev === true) {
        const titleSaveResult = betterncm_native.fs.writeFileText(`${dataPath}\\plugins_dev\\KINDYEAR-MusicInfo\\output\\Title.txt`, `${title}`);
        const artistSaveResult = betterncm_native.fs.writeFileText(`${dataPath}\\plugins_dev\\KINDYEAR-MusicInfo\\output\\Artist.txt`, `${artist}`);
        const outputPath = `${dataPath}\\plugins_dev\\KINDYEAR-MusicInfo\\output\\Cover.png`;
        const coverSaveResult = await betterncm.app.exec(`wget -O "${outputPath}" "${imageUrl}"`);
        console.log(`[KMI] [DEV] Music Info: ${title} - ${artist} - ${imageUrl},info is different, save.`);
        console.log(`[KMI] [DEV] Save Result: Title:${titleSaveResult} - Artist:${artistSaveResult} - Cover:${coverSaveResult}`);
      } else {
        const titleSaveResult = betterncm_native.fs.writeFileText(`${dataPath}\\plugins_runtime\\KINDYEAR-MusicInfo\\output\\Title.txt`, `${title}`);
        const artistSaveResult = betterncm_native.fs.writeFileText(`${dataPath}\\plugins_runtime\\KINDYEAR-MusicInfo\\output\\Artist.txt`, `${artist}`);
        const outputPath = `${dataPath}\\plugins_runtime\\KINDYEAR-MusicInfo\\output\\Cover.png`;
        const coverSaveResult = await betterncm.app.exec(`wget -O "${outputPath}" "${imageUrl}"`);
        console.log(`[KMI] Music Info: ${title} - ${artist} - ${imageUrl},info is different, save.`);
        console.log(`[KMI] Save Result: Title:${titleSaveResult} - Artist:${artistSaveResult} - Cover:${coverSaveResult}`);
      }
      oldMusicInfoTitle = title;
      oldMusicInfoArtist = artist;
      oldMusicInfoCoverUrl = imageUrl;
    }
  }
  plugin.onAllPluginsLoaded(() => {
  });
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3VpL2NvbmZpZy50c3giLCAiLi4vc3JjL21haW4udHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImV4cG9ydCBmdW5jdGlvbiBDb25maWcoKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxoMT5LSU5EWUVBUiBNdXNpYyBJbmZvPC9oMT5cclxuICAgICAgICAgICAgPHA+XHU2NzJDXHU2M0QyXHU0RUY2XHU1M0VGXHU0RUU1XHU4RjkzXHU1MUZBXHU2QjRDXHU2NkYyXHU3Njg0XHU1NDBEXHU3OUYwXHUzMDAxXHU2QjRDXHU2MjRCXHU1NDBEXHU3OUYwXHU4MUYzXHU2NzJDXHU1NzMwdHh0XHU2NTg3XHU0RUY2XHVGRjBDXHU1QzAxXHU5NzYyXHU0RkREXHU1QjU4XHU0RTNBXHU2NzJDXHU1NzMwXHU1NkZFXHU3MjQ3PC9wPlxyXG4gICAgICAgICAgICA8cD5cdTUzRUZcdTU3MjhPQlNcdTdCNDlcdTc2RjRcdTY0QURcdThGNkZcdTRFRjZcdTRFMkRcdThCRkJcdTUzRDZcdTY3MkNcdTU3MzBcdTY1ODdcdTY3MkNcdTYyMTZcdTU2RkVcdTcyNDdcdTVCOUVcdTczQjBcdTY2M0VcdTc5M0E8L3A+XHJcbiAgICAgICAgICAgIDxwPlx1NzUzMVx1NEU4RVx1NjcyQ1x1NjNEMlx1NEVGNlx1NEY3Rlx1NzUyOFx1NEU4NmV4ZWNcdTUyOUZcdTgwRkRcdThDMDNcdTc1MjhXaW5kb3dzXHU2NzJDXHU1NzMwXHU3Njg0V2dldFx1N0EwQlx1NUU4Rlx1NEUwQlx1OEY3RFx1NTZGRVx1NzI0N1x1RkYwQ1x1OTk5Nlx1NkIyMVx1NEY3Rlx1NzUyOFx1NTNFRlx1ODBGRFx1NEYxQVx1NUYzOVx1NTFGQVx1OEZEMFx1ODg0Q1dnZXRcdTc2ODRcdTYzRDBcdTc5M0FcdUZGMENcdThCRjdcdTY1M0VcdTVGQzNcdTRGN0ZcdTc1Mjg8L3A+XHJcbiAgICAgICAgICAgIDxwPlx1OEY5M1x1NTFGQVx1NzY4NFx1NEZFMVx1NjA2Rlx1NzZFRVx1NUY1NVx1NEUzQVx1NjNEMlx1NEVGNlx1NzZFRVx1NUY1NVx1NzY4NHBsdWdpbnNfcnVudGltZS9LSU5EWUVBUi1NdXNpY0luZm8vb3V0cHV0PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxufSIsICIvKlxyXG4gICAgQEF1dGhvcjogS0lORFlFQVJcclxuICAgIEBEZXNjcmlwdGlvbjogS0lORFlFQVIgTXVzaWMgSW5mb1xyXG4gICAgQERhdGU6IDIwMjQvMy8xNlxyXG4gICAgQFZlcnNpb246IDEuMC4wXHJcbiovXHJcblxyXG5pbXBvcnQge0NvbmZpZ30gZnJvbSBcIi4vdWkvY29uZmlnXCI7XHJcblxyXG5wbHVnaW4ub25Db25maWcoKCkgPT4ge1xyXG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBSZWFjdERPTS5yZW5kZXIoQ29uZmlnKCksIGVsZW1lbnQpO1xyXG4gICAgcmV0dXJuIGVsZW1lbnQ7XHJcbn0pO1xyXG5cclxuLy8gIFx1NUI5QVx1NEU0OVx1NTE0M1x1N0QyMFx1NTNEOFx1OTFDRlxyXG5sZXQgbXVzaWNJbmZvVGl0bGU6c3RyaW5nID0gbnVsbDtcclxubGV0IG11c2ljSW5mb0FydGlzdDpzdHJpbmcgPSBudWxsO1xyXG5sZXQgbXVzaWNJbmZvQ292ZXJVcmw6c3RyaW5nID0gbnVsbDtcclxuXHJcbmxldCBvbGRNdXNpY0luZm9UaXRsZTpzdHJpbmcgPSBudWxsO1xyXG5sZXQgb2xkTXVzaWNJbmZvQXJ0aXN0OnN0cmluZyA9IG51bGw7XHJcbmxldCBvbGRNdXNpY0luZm9Db3ZlclVybDpzdHJpbmcgPSBudWxsO1xyXG5cclxuY29uc3QgZGV2ID0gYmV0dGVybmNtX25hdGl2ZS5mcy5leGlzdHMoJ3BsdWdpbnNfZGV2L0tJTkRZRUFSLU11c2ljSW5mby8nKTtcclxuXHJcbnBsdWdpbi5vbkxvYWQoYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJbS01JXSBLTUkgTG9hZGVkLERldiBtb2RlOlwiLGRldik7XHJcbiAgICBsZWdhY3lOYXRpdmVDbWRlci5hcHBlbmRSZWdpc3RlckNhbGwoJ0xvYWQnLCdhdWRpb3BsYXllcicsKCk9PntcclxuXHJcblxyXG4gICAgICAgIC8vICBcdTVGMDBcdTU5Q0JvYnNlcnZlclx1NTE0M1x1N0QyMFx1NzZEMVx1NTQyQ1xyXG4gICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYS50aXRsZVwiKTtcclxuICAgICAgICAgICAgY29uc3QgYXJ0aXN0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJhLmFydGlzdFwiKTtcclxuICAgICAgICAgICAgY29uc3QgY292ZXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImltZy5mcm9udC5ub3JtYWwuai1jb3ZlclwiKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aXRsZUVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIG11c2ljSW5mb1RpdGxlID0gdGl0bGVFbGVtZW50LmdldEF0dHJpYnV0ZShcInRpdGxlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChhcnRpc3RFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBtdXNpY0luZm9BcnRpc3QgPSBhcnRpc3RFbGVtZW50LnRleHRDb250ZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjb3ZlckVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIG11c2ljSW5mb0NvdmVyVXJsID0gY292ZXJFbGVtZW50LmdldEF0dHJpYnV0ZShcInNyY1wiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgYXdhaXQgc2F2ZU11c2ljSW5mbyhtdXNpY0luZm9UaXRsZSwgbXVzaWNJbmZvQXJ0aXN0LCBtdXNpY0luZm9Db3ZlclVybCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHRpdGxlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJhLnRpdGxlLmYtb2guai10aXRsZVwiKTtcclxuICAgICAgICBpZiAodGl0bGVFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuYm9keSwge2NoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZX0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJUaXRsZSBlbGVtZW50IG5vdCBmb3VuZCFcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICAvLyAgXHU3QjQ5XHU1Rjg1XHU5ODc1XHU5NzYyXHU1MkEwXHU4RjdEXHU1QjhDXHU2QkQ1XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xyXG5cclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIGNoZWNrTXVzaWNJbmZvKHRpdGxlOiBzdHJpbmcgfCBudWxsLCBhcnRpc3Q6IHN0cmluZyB8IG51bGwsIGNvdmVyVXJsOiBzdHJpbmcgfCBudWxsKSB7XHJcbiAgICAvLyBcdTY4QzBcdTY3RTVcdTk3RjNcdTRFNTBcdTRGRTFcdTYwNkZcdTY2MkZcdTU0MjZcdTUzRDFcdTc1MUZcdTUzRDhcdTUzMTZcclxuICAgIHJldHVybiB0aXRsZSAhPT0gb2xkTXVzaWNJbmZvVGl0bGUgfHwgYXJ0aXN0ICE9PSBvbGRNdXNpY0luZm9BcnRpc3QgfHwgY292ZXJVcmwgIT09IG9sZE11c2ljSW5mb0NvdmVyVXJsO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBzYXZlTXVzaWNJbmZvKHRpdGxlOiBzdHJpbmcgfCBudWxsLCBhcnRpc3Q6IHN0cmluZyB8IG51bGwsIGNvdmVyVXJsOiBzdHJpbmcgfCBudWxsKSB7XHJcbiAgICBjb25zdCBpbWFnZVVybCA9IGNvdmVyVXJsPy5tYXRjaCgvaHR0cHM6XFwvXFwvW14vXStcXC9bXj9dKy8pPy5bMF07XHJcblxyXG4gICAgaWYgKGNoZWNrTXVzaWNJbmZvKHRpdGxlLCBhcnRpc3QsIGltYWdlVXJsKSkge1xyXG4gICAgICAgIC8vICBcdTgzQjdcdTUzRDZCZXR0ZXJOQ01cdTYzRDJcdTRFRjZcdTc2RUVcdTVGNTVcclxuICAgICAgICBsZXQgZGF0YVBhdGggPSBhd2FpdCBiZXR0ZXJuY20uYXBwLmdldERhdGFQYXRoKCk7XHJcblxyXG4gICAgICAgIGlmKGRldiA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgY29uc3QgdGl0bGVTYXZlUmVzdWx0ID0gYmV0dGVybmNtX25hdGl2ZS5mcy53cml0ZUZpbGVUZXh0KGAke2RhdGFQYXRofVxcXFxwbHVnaW5zX2RldlxcXFxLSU5EWUVBUi1NdXNpY0luZm9cXFxcb3V0cHV0XFxcXFRpdGxlLnR4dGAsIGAke3RpdGxlfWApXHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgY29uc3QgYXJ0aXN0U2F2ZVJlc3VsdCA9IGJldHRlcm5jbV9uYXRpdmUuZnMud3JpdGVGaWxlVGV4dChgJHtkYXRhUGF0aH1cXFxccGx1Z2luc19kZXZcXFxcS0lORFlFQVItTXVzaWNJbmZvXFxcXG91dHB1dFxcXFxBcnRpc3QudHh0YCwgYCR7YXJ0aXN0fWApXHJcbiAgICAgICAgICAgIGNvbnN0IG91dHB1dFBhdGggPSBgJHtkYXRhUGF0aH1cXFxccGx1Z2luc19kZXZcXFxcS0lORFlFQVItTXVzaWNJbmZvXFxcXG91dHB1dFxcXFxDb3Zlci5wbmdgO1xyXG4gICAgICAgICAgICBjb25zdCBjb3ZlclNhdmVSZXN1bHQgPSBhd2FpdCBiZXR0ZXJuY20uYXBwLmV4ZWMoYHdnZXQgLU8gXCIke291dHB1dFBhdGh9XCIgXCIke2ltYWdlVXJsfVwiYCk7XHJcblxyXG4gICAgICAgICAgICAvLyAgXHU2MjUzXHU1MzcwXHU0RkREXHU1QjU4XHU2MEM1XHU1MUI1XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBbS01JXSBbREVWXSBNdXNpYyBJbmZvOiAke3RpdGxlfSAtICR7YXJ0aXN0fSAtICR7aW1hZ2VVcmx9LGluZm8gaXMgZGlmZmVyZW50LCBzYXZlLmApO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgW0tNSV0gW0RFVl0gU2F2ZSBSZXN1bHQ6IFRpdGxlOiR7dGl0bGVTYXZlUmVzdWx0fSAtIEFydGlzdDoke2FydGlzdFNhdmVSZXN1bHR9IC0gQ292ZXI6JHtjb3ZlclNhdmVSZXN1bHR9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgY29uc3QgdGl0bGVTYXZlUmVzdWx0ID0gYmV0dGVybmNtX25hdGl2ZS5mcy53cml0ZUZpbGVUZXh0KGAke2RhdGFQYXRofVxcXFxwbHVnaW5zX3J1bnRpbWVcXFxcS0lORFlFQVItTXVzaWNJbmZvXFxcXG91dHB1dFxcXFxUaXRsZS50eHRgLCBgJHt0aXRsZX1gKVxyXG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgICAgIGNvbnN0IGFydGlzdFNhdmVSZXN1bHQgPSBiZXR0ZXJuY21fbmF0aXZlLmZzLndyaXRlRmlsZVRleHQoYCR7ZGF0YVBhdGh9XFxcXHBsdWdpbnNfcnVudGltZVxcXFxLSU5EWUVBUi1NdXNpY0luZm9cXFxcb3V0cHV0XFxcXEFydGlzdC50eHRgLCBgJHthcnRpc3R9YClcclxuICAgICAgICAgICAgY29uc3Qgb3V0cHV0UGF0aCA9IGAke2RhdGFQYXRofVxcXFxwbHVnaW5zX3J1bnRpbWVcXFxcS0lORFlFQVItTXVzaWNJbmZvXFxcXG91dHB1dFxcXFxDb3Zlci5wbmdgO1xyXG4gICAgICAgICAgICBjb25zdCBjb3ZlclNhdmVSZXN1bHQgPSBhd2FpdCBiZXR0ZXJuY20uYXBwLmV4ZWMoYHdnZXQgLU8gXCIke291dHB1dFBhdGh9XCIgXCIke2ltYWdlVXJsfVwiYCk7XHJcblxyXG4gICAgICAgICAgICAvLyAgXHU2MjUzXHU1MzcwXHU0RkREXHU1QjU4XHU2MEM1XHU1MUI1XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBbS01JXSBNdXNpYyBJbmZvOiAke3RpdGxlfSAtICR7YXJ0aXN0fSAtICR7aW1hZ2VVcmx9LGluZm8gaXMgZGlmZmVyZW50LCBzYXZlLmApO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgW0tNSV0gU2F2ZSBSZXN1bHQ6IFRpdGxlOiR7dGl0bGVTYXZlUmVzdWx0fSAtIEFydGlzdDoke2FydGlzdFNhdmVSZXN1bHR9IC0gQ292ZXI6JHtjb3ZlclNhdmVSZXN1bHR9YCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBcdTY2RjRcdTY1QjBcdTY1RTdcdTc2ODRcdTk3RjNcdTRFNTBcdTRGRTFcdTYwNkZcclxuICAgICAgICBvbGRNdXNpY0luZm9UaXRsZSA9IHRpdGxlO1xyXG4gICAgICAgIG9sZE11c2ljSW5mb0FydGlzdCA9IGFydGlzdDtcclxuICAgICAgICBvbGRNdXNpY0luZm9Db3ZlclVybCA9IGltYWdlVXJsO1xyXG4gICAgfVxyXG59XHJcblxyXG5wbHVnaW4ub25BbGxQbHVnaW5zTG9hZGVkKCgpID0+IHtcclxuICAgLy8gVE9ETyBcdTZCNENcdThCQ0RcdTUyQTBcdThGN0RcdTYzRDJcdTRFRjZcclxufSk7XHJcbiJdLAogICJtYXBwaW5ncyI6ICI7O0FBQU8sV0FBUyxTQUFTO0FBQ3JCLFdBQ0ksa0JBQUMsYUFDRyxrQkFBQyxZQUFHLHFCQUFtQixHQUN2QixrQkFBQyxXQUFFLHFNQUFtQyxHQUN0QyxrQkFBQyxXQUFFLG1JQUF3QixHQUMzQixrQkFBQyxXQUFFLGlSQUE2RCxHQUNoRSxrQkFBQyxXQUFFLHlIQUFzRCxDQUM3RDtBQUFBLEVBRVI7OztBQ0RBLFNBQU8sU0FBUyxNQUFNO0FBQ2xCLFVBQU0sVUFB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
